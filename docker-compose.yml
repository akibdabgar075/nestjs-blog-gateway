

services:

  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dev@12345
      POSTGRES_DB: blogdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - redis-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redis-insight-data:/data
    networks:
      - redis-network
    depends_on:
      - redis

volumes:
  pgdata:
  rabbit_data:
  redis-data:
    driver: local
  redis-insight-data:
    driver: local

networks:
  backend:
    driver: bridge
  redis-network:
    driver: bridge



  # post-service:
  #   build:
  #     context: .
  #     dockerfile: apps/post-service/Dockerfile
  #   env_file:
  #     - apps\post-service\.env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   ports:
  #     - "3001:3001"

  # comment-service:
  #   build:
  #     context: .
  #     dockerfile: apps/comment-service/Dockerfile
  #   env_file:
  #     - apps\comment-service\.env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   ports:
  #     - "3002:3002"

  # api-gateway:
  #   build:
  #     context: ./
  #     dockerfile: apps/api-gateway/Dockerfile

  #   env_file:
  #     - apps\api-gateway\.env
  #   depends_on:
  #     post-service:
  #       condition: service_started
  #     comment-service:
  #       condition: service_started
  #   ports:
  #     - "3000:3000"

  # gateway:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       SERVICE: gateway
  #   container_name: gateway
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "3000:3000"

  # post:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       SERVICE: post
  #   container_name: post
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "3001:3001"


  # comment:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       SERVICE: comment
  #   container_name: comment
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "3002:3002"